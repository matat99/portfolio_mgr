def get_weekly_performance(tickers_dict):
    performance_dict = {}
    today = pd.Timestamp.now(tz='UTC').floor('D') - pd.DateOffset(days=1)
    one_week_ago = today - pd.DateOffset(weeks=1)

    for name, ticker in tickers_dict.items():
        try:
            data = yf.download(ticker, start=one_week_ago.strftime('%Y-%m-%d'), end=today.strftime('%Y-%m-%d'), progress=False)
            
            if data.empty:
                performance_dict[name] = 'No data'
                continue

            week_ago_price = data['Close'][0]
            close_price = data['Close'][-1]

            performance_dict[name] = round(((close_price - week_ago_price) / week_ago_price) * 100, 2)
            print(f"{name} Week Ago Date: {data.index[0]}, Week Ago Price: {week_ago_price}Close Date: {data.index[-1]}, Close Price: {close_price}")
        except Exception as e:
            performance_dict[name] = f"Error: {e}"
    return performance_dict

def get_position_worth(tickers_dict, transactions_dict):
    position_worth_dict = {}
    for name, ticker in tickers_dict.items():
        try:
            transactions = transactions_dict.get(ticker, [])
            data = yf.download(ticker, progress=False)
            total_worth = 0.0
            for transaction in transactions:
                transaction_date = pd.to_datetime(transaction['date'])
                shares_bought = transaction['amount'] / data.loc[transaction_date, 'Close']
                total_worth += shares_bought * data['Close'][-1]
            position_worth_dict[name] = total_worth
        except Exception as e:
            position_worth_dict[name] = f"Error: {e}"
    return position_worth_dict